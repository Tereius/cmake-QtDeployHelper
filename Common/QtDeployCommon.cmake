include(CMakeParseArguments)

# copy_replace_in_file(<filename> [REGEX] DESTINATION <dst> MATCH <match_string> REPLACE <replace replace_string>)
function(copy_replace_in_file)
    set(options REGEX)
    set(oneValueArgs DESTINATION MATCH REPLACE)
    set(multiValueArgs)
    cmake_parse_arguments(CP "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
    file(READ "${ARGV0}" FILE_CONTENT)
    if(CP_MATCH AND CP_REPLACE)
        if(CP_REGEX)
            string(REGEX REPLACE ${CP_MATCH} ${CP_REPLACE} REPLACED_CONTENT ${FILE_CONTENT})
        else()
            string(REPLACE ${CP_MATCH} ${CP_REPLACE} REPLACED_CONTENT ${FILE_CONTENT})
        endif()
    endif()
    file(WRITE "${CP_DESTINATION}" ${REPLACED_CONTENT})
endfunction()

# replace_in_file(<filename> [REGEX] MATCH <match_string> REPLACE <replace replace_string>)
function(replace_in_file)
    set(options REGEX)
    set(oneValueArgs MATCH REPLACE)
    set(multiValueArgs)
    cmake_parse_arguments(CP "${options}" "${oneValueArgs}" "${multiValueArgs}" ${ARGN})
    file(READ "${ARGV0}" FILE_CONTENT)
    if(CP_MATCH AND CP_REPLACE)
        if(CP_REGEX)
            string(REGEX REPLACE ${CP_MATCH} ${CP_REPLACE} REPLACED_CONTENT ${FILE_CONTENT})
        else()
            string(REPLACE ${CP_MATCH} ${CP_REPLACE} REPLACED_CONTENT ${FILE_CONTENT})
        endif()
    endif()
    file(WRITE "${ARGV0}" ${REPLACED_CONTENT})
endfunction()

# Allows generator expressions in config files. Accepts all parameters "configure_file()" accepts.
# WARNING: The creation of the file is delayed until build system generation see https://cmake.org/cmake/help/latest/manual/cmake-generator-expressions.7.html
macro(configure_file_gen_expr)
    configure_file(${ARGV})
    file(READ "${ARGV1}" FILE_CONTENT)
    file(REMOVE "${ARGV1}")
    file(GENERATE OUTPUT "${ARGV1}" CONTENT "${FILE_CONTENT}")
endmacro()
